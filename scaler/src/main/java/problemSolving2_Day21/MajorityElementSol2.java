package problemSolving2_Day21;

import java.util.ArrayList;
import java.util.List;

public class MajorityElementSol2 {

  public static void main(String[] args) {
    ArrayList<Integer> a = new ArrayList<>();

    a.add(685250);
    a.add(373805);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(675911);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(635885);
    a.add(675097);
    a.add(66286);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(370760);
    a.add(647785);
    a.add(947842);
    a.add(244285);
    a.add(400761);
    a.add(379864);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(978492);
    a.add(647785);
    a.add(704970);
    a.add(541737);
    a.add(647785);
    a.add(855460);
    a.add(647785);
    a.add(379855);
    a.add(986675);
    a.add(622753);
    a.add(647785);
    a.add(812299);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(71467);
    a.add(846275);
    a.add(647785);
    a.add(710937);
    a.add(647785);
    a.add(366396);
    a.add(647785);
    a.add(382992);
    a.add(647785);
    a.add(647785);
    a.add(72527);
    a.add(555794);
    a.add(647785);
    a.add(523538);
    a.add(37408);
    a.add(647785);
    a.add(935587);
    a.add(647785);
    a.add(9595);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(744765);
    a.add(647785);
    a.add(647785);
    a.add(898050);
    a.add(886264);
    a.add(387791);
    a.add(647785);
    a.add(595602);
    a.add(817103);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(370484);
    a.add(647785);
    a.add(422927);
    a.add(673780);
    a.add(986485);
    a.add(647785);
    a.add(647785);
    a.add(331169);
    a.add(127239);
    a.add(647785);
    a.add(369048);
    a.add(647785);
    a.add(689862);
    a.add(598658);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(403522);
    a.add(647785);
    a.add(647785);
    a.add(380166);
    a.add(670242);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(846928);
    a.add(647785);
    a.add(647785);
    a.add(629864);
    a.add(537726);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(174936);
    a.add(234931);
    a.add(638244);
    a.add(588789);
    a.add(762821);
    a.add(155991);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(844780);
    a.add(58614);
    a.add(329151);
    a.add(344786);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(413772);
    a.add(456365);
    a.add(647785);
    a.add(421465);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(829438);
    a.add(647785);
    a.add(855827);
    a.add(924592);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(103075);
    a.add(142368);
    a.add(389244);
    a.add(506112);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(685983);
    a.add(852694);
    a.add(419178);
    a.add(588547);
    a.add(647785);
    a.add(873491);
    a.add(46833);
    a.add(718071);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(113736);
    a.add(647785);
    a.add(825636);
    a.add(126122);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(319681);
    a.add(647785);
    a.add(212524);
    a.add(647785);
    a.add(553799);
    a.add(440788);
    a.add(647785);
    a.add(468137);
    a.add(647785);
    a.add(636472);
    a.add(158828);
    a.add(918745);
    a.add(215513);
    a.add(984597);
    a.add(903696);
    a.add(647785);
    a.add(752199);
    a.add(495024);
    a.add(733003);
    a.add(647785);
    a.add(827202);
    a.add(609598);
    a.add(489412);
    a.add(647785);
    a.add(647785);
    a.add(577408);
    a.add(647785);
    a.add(647785);
    a.add(1606);
    a.add(970292);
    a.add(854153);
    a.add(321920);
    a.add(647785);
    a.add(647785);
    a.add(783633);
    a.add(269450);
    a.add(463396);
    a.add(902482);
    a.add(581513);
    a.add(332547);
    a.add(647785);
    a.add(889940);
    a.add(468927);
    a.add(647785);
    a.add(647785);
    a.add(2987);
    a.add(106985);
    a.add(647785);
    a.add(647785);
    a.add(390892);
    a.add(186245);
    a.add(647785);
    a.add(601990);
    a.add(881690);
    a.add(647785);
    a.add(591218);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(833579);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(792941);
    a.add(413859);
    a.add(647785);
    a.add(74935);
    a.add(647785);
    a.add(647785);
    a.add(355665);
    a.add(712135);
    a.add(415899);
    a.add(56098);
    a.add(647785);
    a.add(575782);
    a.add(647785);
    a.add(622258);
    a.add(84803);
    a.add(647785);
    a.add(647785);
    a.add(438039);
    a.add(647785);
    a.add(294936);
    a.add(302259);
    a.add(647785);
    a.add(126039);
    a.add(345673);
    a.add(827076);
    a.add(647785);
    a.add(647785);
    a.add(451842);
    a.add(369195);
    a.add(647785);
    a.add(647785);
    a.add(801201);
    a.add(647785);
    a.add(749475);
    a.add(647785);
    a.add(204824);
    a.add(279989);
    a.add(941833);
    a.add(647785);
    a.add(293227);
    a.add(577189);
    a.add(577668);
    a.add(28938);
    a.add(516511);
    a.add(647785);
    a.add(647785);
    a.add(166523);
    a.add(523974);
    a.add(978864);
    a.add(976210);
    a.add(647785);
    a.add(647785);
    a.add(566202);
    a.add(647785);
    a.add(241621);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(703696);
    a.add(458565);
    a.add(785805);
    a.add(647785);
    a.add(638180);
    a.add(647785);
    a.add(885802);
    a.add(647785);
    a.add(647785);
    a.add(250232);
    a.add(749277);
    a.add(397764);
    a.add(969844);
    a.add(647785);
    a.add(647127);
    a.add(647785);
    a.add(554071);
    a.add(647785);
    a.add(120270);
    a.add(647785);
    a.add(127108);
    a.add(904183);
    a.add(391021);
    a.add(647785);
    a.add(838069);
    a.add(647785);
    a.add(541704);
    a.add(647785);
    a.add(647785);
    a.add(178998);
    a.add(683509);
    a.add(697927);
    a.add(403189);
    a.add(330787);
    a.add(647785);
    a.add(156667);
    a.add(647785);
    a.add(647785);
    a.add(33148);
    a.add(647785);
    a.add(172891);
    a.add(647785);
    a.add(647785);
    a.add(471516);
    a.add(647785);
    a.add(24789);
    a.add(647785);
    a.add(311087);
    a.add(647785);
    a.add(939986);
    a.add(274398);
    a.add(775573);
    a.add(855966);
    a.add(578119);
    a.add(647785);
    a.add(760557);
    a.add(647785);
    a.add(647785);
    a.add(957665);
    a.add(196566);
    a.add(647785);
    a.add(119035);
    a.add(856582);
    a.add(647785);
    a.add(123050);
    a.add(224425);
    a.add(647785);
    a.add(647785);
    a.add(470588);
    a.add(939128);
    a.add(287455);
    a.add(647785);
    a.add(538582);
    a.add(528571);
    a.add(346725);
    a.add(647785);
    a.add(322979);
    a.add(955926);
    a.add(492696);
    a.add(647785);
    a.add(441771);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(213118);
    a.add(67995);
    a.add(781341);
    a.add(538940);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(226460);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(237198);
    a.add(647785);
    a.add(752903);
    a.add(780238);
    a.add(37151);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(782323);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(131619);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(320776);
    a.add(257459);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(946493);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(8170);
    a.add(647785);
    a.add(557199);
    a.add(280807);
    a.add(910132);
    a.add(647785);
    a.add(894942);
    a.add(502410);
    a.add(20551);
    a.add(934637);
    a.add(887970);
    a.add(947278);
    a.add(732852);
    a.add(724566);
    a.add(647785);
    a.add(957292);
    a.add(243104);
    a.add(447088);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(426473);
    a.add(118197);
    a.add(647785);
    a.add(647785);
    a.add(845926);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(301864);
    a.add(652302);
    a.add(291758);
    a.add(647785);
    a.add(647785);
    a.add(918775);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(186874);
    a.add(647785);
    a.add(458667);
    a.add(22598);
    a.add(642560);
    a.add(715372);
    a.add(647785);
    a.add(565666);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(218841);
    a.add(647785);
    a.add(647785);
    a.add(712755);
    a.add(823763);
    a.add(688282);
    a.add(338412);
    a.add(647785);
    a.add(305102);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(98945);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(327015);
    a.add(19103);
    a.add(153027);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(443500);
    a.add(304407);
    a.add(777013);
    a.add(311310);
    a.add(579899);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(694930);
    a.add(647785);
    a.add(647785);
    a.add(3918);
    a.add(647785);
    a.add(647785);
    a.add(432303);
    a.add(647785);
    a.add(647785);
    a.add(290213);
    a.add(680139);
    a.add(246060);
    a.add(647785);
    a.add(590836);
    a.add(542922);
    a.add(502936);
    a.add(784147);
    a.add(282637);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(943406);
    a.add(324107);
    a.add(808450);
    a.add(647785);
    a.add(831247);
    a.add(934003);
    a.add(647785);
    a.add(888826);
    a.add(540594);
    a.add(647785);
    a.add(647785);
    a.add(697049);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(255782);
    a.add(837178);
    a.add(647785);
    a.add(647785);
    a.add(115667);
    a.add(647785);
    a.add(647785);
    a.add(553874);
    a.add(711108);
    a.add(82579);
    a.add(488871);
    a.add(647785);
    a.add(647785);
    a.add(141387);
    a.add(553161);
    a.add(830680);
    a.add(852185);
    a.add(647785);
    a.add(506456);
    a.add(647785);
    a.add(48595);
    a.add(495262);
    a.add(485829);
    a.add(826892);
    a.add(788996);
    a.add(647785);
    a.add(647785);
    a.add(751347);
    a.add(647785);
    a.add(927232);
    a.add(647785);
    a.add(227337);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(847862);
    a.add(647785);
    a.add(443444);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(129513);
    a.add(998524);
    a.add(647785);
    a.add(647785);
    a.add(219065);
    a.add(647785);
    a.add(73309);
    a.add(146437);
    a.add(647785);
    a.add(444251);
    a.add(647785);
    a.add(140194);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(127524);
    a.add(647785);
    a.add(296944);
    a.add(619375);
    a.add(647785);
    a.add(815950);
    a.add(647785);
    a.add(350220);
    a.add(401943);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(373467);
    a.add(403080);
    a.add(647785);
    a.add(37291);
    a.add(730533);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(324274);
    a.add(965504);
    a.add(647785);
    a.add(707819);
    a.add(647785);
    a.add(395895);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(652853);
    a.add(807985);
    a.add(647785);
    a.add(639921);
    a.add(647785);
    a.add(517985);
    a.add(647785);
    a.add(647785);
    a.add(348880);
    a.add(647785);
    a.add(647785);
    a.add(466286);
    a.add(647785);
    a.add(610049);
    a.add(647785);
    a.add(647785);
    a.add(5821);
    a.add(162778);
    a.add(616641);
    a.add(647785);
    a.add(590105);
    a.add(431188);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(913914);
    a.add(647785);
    a.add(746466);
    a.add(647785);
    a.add(647785);
    a.add(102875);
    a.add(647785);
    a.add(505025);
    a.add(695897);
    a.add(647785);
    a.add(647785);
    a.add(9042);
    a.add(647785);
    a.add(302606);
    a.add(647785);
    a.add(866777);
    a.add(493482);
    a.add(134588);
    a.add(120416);
    a.add(647785);
    a.add(907483);
    a.add(647785);
    a.add(592832);
    a.add(647785);
    a.add(573560);
    a.add(647785);
    a.add(552599);
    a.add(954007);
    a.add(647785);
    a.add(647785);
    a.add(815985);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(994066);
    a.add(224504);
    a.add(820958);
    a.add(500014);
    a.add(145243);
    a.add(477329);
    a.add(647785);
    a.add(855566);
    a.add(53523);
    a.add(647785);
    a.add(133000);
    a.add(647785);
    a.add(647785);
    a.add(510590);
    a.add(647785);
    a.add(647785);
    a.add(170090);
    a.add(647785);
    a.add(647785);
    a.add(876397);
    a.add(647785);
    a.add(704604);
    a.add(647785);
    a.add(821200);
    a.add(632985);
    a.add(647785);
    a.add(647785);
    a.add(47804);
    a.add(647785);
    a.add(295960);
    a.add(482858);
    a.add(31125);
    a.add(647785);
    a.add(641300);
    a.add(647785);
    a.add(521490);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(828214);
    a.add(910080);
    a.add(647785);
    a.add(835644);
    a.add(728749);
    a.add(613082);
    a.add(287806);
    a.add(853444);
    a.add(647785);
    a.add(647785);
    a.add(107304);
    a.add(647785);
    a.add(135943);
    a.add(647785);
    a.add(647785);
    a.add(179605);
    a.add(258948);
    a.add(647785);
    a.add(926367);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(669850);
    a.add(381686);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(468386);
    a.add(223373);
    a.add(332350);
    a.add(315604);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(583060);
    a.add(187985);
    a.add(803781);
    a.add(397142);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(274715);
    a.add(20383);
    a.add(981392);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(574811);
    a.add(484638);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(78928);
    a.add(625202);
    a.add(833439);
    a.add(50797);
    a.add(759712);
    a.add(255754);
    a.add(701987);
    a.add(38027);
    a.add(136731);
    a.add(647785);
    a.add(581700);
    a.add(213062);
    a.add(59910);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(647785);
    a.add(548571);
    a.add(647785);
    a.add(647785);
    a.add(991107);
    a.add(698271);

    System.out.println(majorityElement(a));

  }

  public static int majorityElement(final List<Integer> A) {
    int candidate=A.get(0);
    int count=1;

    for (int i=1;i<A.size();i++){
      if(candidate==A.get(i)){
        count++;
      }
      else {
        count--;
        if(count==0){
          candidate=A.get(i);
        }
      }
    }
    count=0;
    for(int i=0; i<A.size();i++){
      if(A.get(i)==candidate){
        count++;
      }
    }
    if(count>A.size()/2){
      return candidate;
    }

    return candidate;

  }

}
